# ==================================================
# vars

config("hyperleveldb_config") {
  include_dirs = [ "include" ]
}

static_library("hyperleveldb") {
  include_dirs = [
    "config-include", # private
    ".",
  ]
  sources = [
    #"db/c.cc",
    "db/builder.cc",
    "db/builder.h",
    "db/db_impl.cc",
    "db/db_impl.h",
    "db/db_iter.cc",
    "db/db_iter.h",
    "db/filename.cc",
    "db/filename.h",
    "db/dbformat.cc",
    "db/dbformat.h",
    "db/log_format.h",
    "db/log_reader.cc",
    "db/log_reader.h",
    "db/log_writer.cc",
    "db/log_writer.h",
    "db/memtable.cc",
    "db/memtable.h",
    "db/repair.cc",
    "db/skiplist.h",
    "db/snapshot.h",
    "db/table_cache.cc",
    "db/table_cache.h",
    "db/version_edit.cc",
    "db/version_edit.h",
    "db/version_set.cc",
    "db/version_set.h",
    "db/write_batch.cc",
    "db/write_batch_internal.h",
    #"helpers/memenv/memenv.cc",
    #"helpers/memenv/memenv.h",
    "include/hyperleveldb/cache.h",
    "include/hyperleveldb/comparator.h",
    "include/hyperleveldb/db.h",
    "include/hyperleveldb/dumpfile.h",
    "include/hyperleveldb/env.h",
    "include/hyperleveldb/filter_policy.h",
    "include/hyperleveldb/iterator.h",
    "include/hyperleveldb/options.h",
    "include/hyperleveldb/slice.h",
    "include/hyperleveldb/status.h",
    "include/hyperleveldb/table.h",
    "include/hyperleveldb/table_builder.h",
    "include/hyperleveldb/write_batch.h",
    "port/port.h",
    "table/block.cc",
    "table/block.h",
    "table/block_builder.cc",
    "table/block_builder.h",
    "table/filter_block.cc",
    "table/filter_block.h",
    "table/format.cc",
    "table/format.h",
    "table/iterator.cc",
    "table/iterator_wrapper.h",
    "table/merger.cc",
    "table/merger.h",
    "table/table.cc",
    "table/table_builder.cc",
    "table/two_level_iterator.cc",
    "table/two_level_iterator.h",
    "util/arena.cc",
    "util/arena.h",
    "util/bloom.cc",
    "util/cache.cc",
    "util/coding.cc",
    "util/coding.h",
    "util/comparator.cc",
    "util/crc32c.cc",
    "util/crc32c.h",
    "util/env.cc",
    "util/filter_policy.cc",
    "util/hash.cc",
    "util/hash.h",
    "util/logging.cc",
    "util/logging.h",
    "util/mutexlock.h",
    "util/options.cc",
    "util/random.h",
    "util/status.cc",
    # port
    "port/port_posix.cc",
    "port/port_posix.h",
    "util/env_posix.cc",
    # added
    "db/replay_iterator.cc",
    "util/atomic.cc",
  ]
  
  defines = [
    "SNAPPY=1",
    "LEVELDB_PLATFORM_POSIX=1",
    "HAVE_CONFIG_H",
  ]
  
  if (is_mac) {
    defines += [ "OS_MACOSX=1" ]
  } else {
    defines += [ "OS_LINUX=1" ]
  }

  cflags = [
    "-fno-builtin-memcmp",
    # added
    "-Wno-sign-compare",
    "-Wno-unused-but-set-variable",
    "-Wno-variadic-macros",
  ]

  public_configs = [ ":hyperleveldb_config" ]
  
  deps = [
    "../snappy:snappy",
  ]
}

